{"version":3,"sources":["services/requests.js","reducers/requestReducer.js","components/Menu.js","components/Sidebar.js","reducers/notificationReducer.js","components/ReduxSidebar.js","components/RequestForm.js","components/RequestList.js","components/Notification.js","App.js","store.js","index.js"],"names":["baseURL","getAll","a","axios","get","response","data","postNew","newobj","post","message","filter","tag","text","params","selectPage","page","addRequest","newRequest","dispatch","type","Menu","Navbar","bg","variant","Brand","src","width","height","Nav","className","style","paddingRight","DescriptionFilter","useState","setText","useDispatch","Container","fluid","Form","onSubmit","event","preventDefault","toLowerCase","requestService","requestsInDB","requests","Row","Label","InputGroup","Control","placeholder","onChange","target","value","Append","Button","paddingTop","paddingBottom","SelectFilter","label","name","optionValues","as","map","optionValue","FilterBar","lastTimer","setNotification","color","time","clearTimeout","setTimeout","Sidebar","reduxBurgerMenu","TextInput","props","useField","field","meta","Group","isInvalid","error","Feedback","SelectField","RequestForm","useEffect","handleSignup","values","created","Date","now","id","uuidv4","status","schema","yup","requestName","required","requestType","description","max","priority","textAlign","validationSchema","initialValues","handleSubmit","noValidate","block","FormPanel","right","customBurgerIcon","noOverlay","onClick","toggleMenu","RequestTable","useSelector","state","columns","dataField","formatter","cell","toLocaleString","timeZone","sort","bootstrap4","keyField","PageList","setPage","Prepend","Text","defaultValue","RequestList","background","Col","justifyContent","Notification","notification","show","handleClose","Modal","onHide","Header","closeButton","Title","Body","Alert","Footer","App","xs","minHeight","paddingLeft","reducer","combineReducers","action","concat","burgerMenu","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42c67bbf.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseURL = '/requests'\n\nconst getAll = async () => {\n  const response = await axios.get(baseURL)\n  // console.log(response)\n  return response.data.data\n}\n\nconst postNew = async (newobj) => {\n  const response = await axios.post(baseURL, newobj)\n\n  // console.log('response:\\n', response)\n  return response.data.message\n}\n\nconst filter = async (tag, text) => {\n  const response = await axios.get(baseURL, { params: { tag, text } })\n  return response.data.data\n}\n\nconst selectPage = async (page) => {\n  const response = await axios.get(baseURL, { params: { page } })\n  return response.data.data\n}\nexport default { getAll, postNew, filter, selectPage }\n","import requestService from '../services/requests'\n\nexport const selectPage = (page) => {\n  return async (dispatch) => {\n    const requestsInDB = await requestService.selectPage(page)\n    dispatch({ type: 'SELCT_PAGE', requests: requestsInDB })\n  }\n}\n\nexport const initRequests = () => {\n  return async (dispatch) => {\n    const requestsInDB = await requestService.getAll()\n    dispatch({ type: 'INIT_REQUEST', requests: requestsInDB })\n  }\n}\n\nexport const addRequest = (newRequest) => {\n  return async (dispatch) => {\n    dispatch({ type: 'ADD_REQUEST', newRequest: newRequest })\n  }\n}\n\nexport const partTextFilter = (filter) => {\n  return async (dispatch) => {\n    const requestsInDB = await requestService.filter(filter.tag, filter.text)\n    dispatch({ type: 'PART_TEXT_FILTER', requests: requestsInDB })\n  }\n}\n\nexport const fullTextFilter = (filter) => {\n  return async (dispatch) => {\n    const requestsInDB = await requestService.filter(filter.tag, filter.text)\n\n    dispatch({ type: 'FULL_TEXT_FILTER', requests: requestsInDB })\n  }\n}\n\nexport const requestReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_REQUEST':\n      // console.log('hi')\n      // console.log('action:\\n', action.requests)\n      return action.requests\n    case 'ADD_REQUEST':\n      return state.concat(action.newRequest)\n    case 'PART_TEXT_FILTER':\n      return action.requests\n    // return state.filter((request) =>\n    //   request[action.filter.tag].toLowerCase().includes(action.filter.text),\n    // )\n    case 'FULL_TEXT_FILTER':\n      return action.requests\n    // return state.filter((request) =>\n    //   request[action.filter.tag].toLowerCase().includes(action.filter.text),\n    // )\n    case 'SELCT_PAGE':\n      return action.requests\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\n\n// style\nimport '../style/Custom.css'\n\nexport const Menu = () => {\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\">\n      <Navbar.Brand>\n        <img\n          src=\"https://cdn.logo.com/hotlink-ok/logo-social.png\"\n          width=\"60\"\n          height=\"30\"\n        />\n      </Navbar.Brand>\n      <Navbar.Brand>Service Center</Navbar.Brand>\n      <Nav className=\"ml-auto navText\">\n        <span className=\"material-icons\" style={{ paddingRight: '10px' }}>\n          face\n        </span>\n        Username\n      </Nav>\n    </Navbar>\n  )\n}\n","//import useState hook to create menu collapse state\nimport React, { useState } from 'react'\n\n// redux\nimport { useDispatch } from 'react-redux'\nimport { partTextFilter, fullTextFilter } from '../reducers/requestReducer'\n\n// import react bootstrap\nimport { Form, Button, Row, Container, InputGroup } from 'react-bootstrap'\n\nconst DescriptionFilter = () => {\n  const [text, setText] = useState('')\n\n  const dispatch = useDispatch()\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    dispatch(partTextFilter({ tag: 'description', text: text.toLowerCase() }))\n  }\n  return (\n    <Container fluid>\n      <Form onSubmit={handleSubmit}>\n        <Form.Row>\n          <Form.Label>Search</Form.Label>\n          <InputGroup>\n            <Form.Control\n              placeholder=\"Search...\"\n              onChange={({ target }) => setText(target.value)}\n            />\n            <InputGroup.Append>\n              <Button\n                type=\"submit\"\n                style={{ paddingTop: '0px', paddingBottom: '0px' }}\n              >\n                <span className=\"material-icons md-18\">search</span>\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Row>\n      </Form>\n    </Container>\n  )\n}\n\nconst SelectFilter = ({ label, name, optionValues }) => {\n  const dispatch = useDispatch()\n\n  const handleChange = (event) => {\n    event.preventDefault()\n    // console.log(event.target.value)\n    dispatch(\n      fullTextFilter({ tag: name, text: event.target.value.toLowerCase() }),\n    )\n  }\n  return (\n    <Container fluid>\n      <Form>\n        <Form.Row>\n          <Form.Label>{label}</Form.Label>\n          <Form.Control as=\"select\" onChange={handleChange}>\n            <option value=\"\">...</option>\n            {optionValues.map((optionValue) => (\n              <option key={optionValue} value={optionValue}>\n                {optionValue}\n              </option>\n            ))}\n          </Form.Control>\n        </Form.Row>\n      </Form>\n    </Container>\n  )\n}\n\nexport const FilterBar = () => {\n  return (\n    <Container fluid>\n      <Row>\n        <DescriptionFilter />\n      </Row>\n      <Row>\n        <SelectFilter\n          label=\"Request Types\"\n          name=\"requesttype\"\n          optionValues={['Audit', 'Maintenance']}\n        />\n      </Row>\n      <Row>\n        <SelectFilter\n          label=\"Priority\"\n          name=\"priority\"\n          optionValues={['High', 'Medium', 'Low']}\n        />\n      </Row>\n      <Row>\n        <SelectFilter\n          label=\"Status\"\n          name=\"status\"\n          optionValues={['Open', 'Closed']}\n        />\n      </Row>\n    </Container>\n  )\n}\n","let lastTimer = null\n\nconst resetNotification = () => {\n  return { type: 'RESET' }\n}\n\nconst setNotification = (message, color, time) => {\n  return async (dispatch) => {\n    await dispatch({ type: 'SET_NOTIFICATION', message: message, color: color })\n    if (lastTimer !== null) {\n      clearTimeout(lastTimer)\n    }\n    lastTimer = setTimeout(() => {\n      dispatch(resetNotification())\n    }, time * 1000)\n  }\n}\n\nexport const notificationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'RESET':\n      return null\n    case 'SET_NOTIFICATION':\n      return { message: action.message, color: action.color }\n    default:\n      return state\n  }\n}\n\nexport { resetNotification, setNotification }\n","import React from 'react'\nimport { bubble as Menu } from 'react-burger-menu'\nimport { decorator as reduxBurgerMenu } from 'redux-burger-menu'\nimport '../style/ReduxSidebar.css'\n\nexport const Sidebar = reduxBurgerMenu(Menu)\n\nexport const TestMenu = () => {\n  return (\n    <Sidebar\n      customBurgerIcon={false}\n      pageWrapId={'page-wrap'}\n      outerContainerId={'outer-container'}\n    >\n      <a id=\"home\" className=\"menu-item\">\n        Home\n      </a>\n      <a id=\"about\" className=\"menu-item\">\n        About\n      </a>\n      <a id=\"contact\" className=\"menu-item\">\n        Contact\n      </a>\n    </Sidebar>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\n// db\nimport requestService from '../services/requests'\n\n// import react bootstrap\nimport { Form, Button, Container } from 'react-bootstrap'\n\n// formik\nimport { Formik, useField, Field } from 'formik'\nimport * as yup from 'yup'\n\n// components\nimport {\n  resetNotification,\n  setNotification,\n} from '../reducers/notificationReducer'\nimport { Sidebar } from '../components/ReduxSidebar'\n\n// redux\nimport { useDispatch } from 'react-redux'\nimport { addRequest } from '../reducers/requestReducer'\nimport { action as toggleMenu } from 'redux-burger-menu'\n\n// id\nimport { v4 as uuidv4 } from 'uuid'\n\n// style\nimport '../style/Custom.css'\n\nconst TextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props)\n  return (\n    <Form.Group>\n      <Form.Label>{label}</Form.Label>\n      <Form.Control {...props} {...field} isInvalid={!!meta.error} />\n\n      <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\n    </Form.Group>\n  )\n}\n\nconst SelectField = ({ label, optionValues, ...props }) => {\n  const [field, meta] = useField(props)\n  return (\n    <Form.Group>\n      <Form.Label>{label}</Form.Label>\n      <Form.Control as=\"select\" {...props} {...field} isInvalid={!!meta.error}>\n        {optionValues.map((optionValue) => (\n          <option key={optionValue} value={optionValue}>\n            {optionValue}\n          </option>\n        ))}\n      </Form.Control>\n\n      <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\n    </Form.Group>\n  )\n}\nconst RequestForm = () => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(resetNotification()), []\n  })\n\n  const handleSignup = async (values) => {\n    event.preventDefault()\n    try {\n      const response = await requestService.postNew({\n        ...values,\n        created: Date.now(),\n        id: uuidv4(),\n        status: 'Open',\n      })\n      dispatch(setNotification('Request created succesfully', 'success', 2))\n      dispatch(addRequest(response))\n    } catch (e) {\n      dispatch(setNotification('Server unavailable', 'danger', 2))\n    }\n  }\n\n  const schema = yup.object({\n    requestName: yup.string().required(),\n    requestType: yup.string().required(),\n    description: yup.string().required().max(255),\n    priority: yup.string().required(),\n  })\n  return (\n    <Container fluid style={{ textAlign: 'left', color: 'white' }}>\n      <h5>CREATE NEW SERVICE REQUEST</h5>\n      <Formik\n        validationSchema={schema}\n        onSubmit={handleSignup}\n        initialValues={{\n          requestName: 'name',\n          requestType: 'Audit',\n          description: 'description',\n          priority: 'High',\n        }}\n      >\n        {({ handleSubmit }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <TextInput\n              label=\"Request Name\"\n              name=\"requestName\"\n              type=\"text\"\n              placeholder=\"Type\"\n            />\n            <SelectField\n              label=\"Request Type\"\n              name=\"requestType\"\n              optionValues={['Audit', 'Maintenance']}\n            />\n            <TextInput\n              label=\"Description\"\n              name=\"description\"\n              type=\"text\"\n              placeholder=\"Type\"\n            />\n            <SelectField\n              label=\"Priority\"\n              name=\"priority\"\n              optionValues={['High', 'Medium', 'Low']}\n            />\n\n            <Button variant=\"primary\" type=\"submit\" block>\n              SEND\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Container>\n  )\n}\n\nexport const FormPanel = () => {\n  const dispatch = useDispatch()\n\n  return (\n    <Container fluid>\n      <Sidebar right customBurgerIcon={false} noOverlay width={'38%'}>\n        <RequestForm />\n      </Sidebar>\n      <Button onClick={() => dispatch(toggleMenu(true))} variant=\"success\">\n        NEW SERVICE REQUEST\n      </Button>\n    </Container>\n  )\n}\n","import React, { useState } from 'react'\nimport { Row, Col, Container, InputGroup, Button, Form } from 'react-bootstrap'\nimport { FormPanel } from './RequestForm'\n\n// redux\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectPage } from '../reducers/requestReducer'\n\n// react table\nimport BootstrapTable from 'react-bootstrap-table-next'\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css'\n\n// style\nimport '../style/Custom.css'\n\nconst RequestTable = () => {\n  const requests = useSelector((state) => state.requests)\n\n  const dateFormatter = (cell) => {\n    return (\n      <span>\n        {new Date(cell).toLocaleString('en-GB', {\n          timeZone: 'UTC',\n        })}\n      </span>\n    )\n  }\n\n  const columns = [\n    {\n      dataField: 'created',\n      text: 'Created',\n      formatter: dateFormatter,\n      sort: true,\n    },\n    { dataField: 'requestname', text: 'Request Name' },\n    { dataField: 'requesttype', text: 'Request Type' },\n    { dataField: 'id', text: 'ID' },\n    { dataField: 'description', text: 'Description' },\n    { dataField: 'priority', text: 'Priority' },\n    { dataField: 'status', text: 'Status' },\n  ]\n\n  if (!requests) {\n    return null\n  }\n\n  return (\n    <BootstrapTable\n      bootstrap4\n      keyField=\"id\"\n      data={requests}\n      columns={columns}\n    />\n  )\n}\nconst PageList = () => {\n  const [page, setPage] = useState(1)\n\n  const dispatch = useDispatch()\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    dispatch(selectPage(page))\n  }\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Row>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Page</InputGroup.Text>\n          </InputGroup.Prepend>\n\n          <Form.Control\n            defaultValue=\"1\"\n            type=\"number\"\n            onChange={({ target }) => setPage(target.value)}\n          />\n\n          <InputGroup.Append>\n            <Button type=\"submit\">Go</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Form.Row>\n    </Form>\n  )\n}\nexport const RequestList = () => {\n  return (\n    <Container fluid>\n      <Row\n        style={{\n          background: '#cdedfb',\n          paddingTop: '10px',\n          paddingBottom: '10px',\n        }}\n      >\n        <Col>\n          <h4> Service Requests</h4>\n        </Col>\n        <Col className=\"rightAlign\">\n          <FormPanel />\n        </Col>\n      </Row>\n      <main id=\"page-wrap\">\n        <Row>\n          <RequestTable />\n        </Row>\n        <Row style={{ justifyContent: 'center', paddingBottom: '30px' }}>\n          <PageList />\n        </Row>\n      </main>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Modal, Button, Alert } from 'react-bootstrap'\n\nconst Notification = () => {\n  const notification = useSelector((state) => state.notification)\n  if (notification === null) {\n    return null\n  }\n  let show = true\n  const handleClose = () => (show = false)\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Notification</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Alert variant={notification.color}>{notification.message}</Alert>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport { Notification }\n","// react\nimport React, { useEffect } from 'react'\n\n// redux\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initRequests } from './reducers/requestReducer'\n\n// components\nimport { Menu } from './components/Menu'\nimport { FilterBar } from './components/Sidebar'\nimport { RequestList } from './components/RequestList'\nimport { Notification } from './components/Notification'\n\n// style\nimport { Container, Row, Col } from 'react-bootstrap'\nimport './style/ReduxSidebar.css'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(initRequests())\n  }, [])\n\n  return (\n    <div>\n      <Notification />\n      <Menu />\n\n      <Row className=\"align-self-stretch\" id=\"outer-container\">\n        <Col\n          xs=\"3\"\n          style={{ color: 'white', background: '#6f748a', minHeight: '100vh' }}\n        >\n          <FilterBar />\n        </Col>\n        <Col\n          xs=\"9\"\n          style={{\n            paddingLeft: '0px',\n            paddingRight: '0px',\n            minHeight: '100vh',\n          }}\n        >\n          <RequestList />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { requestReducer } from './reducers/requestReducer'\nimport { notificationReducer } from './reducers/notificationReducer'\nimport { reducer as burgerMenu } from 'redux-burger-menu'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  requests: requestReducer,\n  burgerMenu,\n})\n\nexport const store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { store } from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}